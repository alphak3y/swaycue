/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider, Wallet, AbstractAddress } from "fuels";
import { Interface, Contract, BaseWalletLocked } from "fuels";
import type { BilliardAbi, BilliardAbiInterface } from "../BilliardAbi";
const _abi = [
  {
    type: "function",
    name: "init",
    inputs: [
      {
        type: "u64",
        name: "start_x",
      },
      {
        type: "u64",
        name: "start_y",
      },
    ],
    outputs: [
      {
        type: "(_, _)",
        name: "",
        components: [
          {
            type: "struct U128",
            name: "__tuple_element",
            components: [
              {
                type: "u64",
                name: "upper",
              },
              {
                type: "u64",
                name: "lower",
              },
            ],
          },
          {
            type: "struct U128",
            name: "__tuple_element",
            components: [
              {
                type: "u64",
                name: "upper",
              },
              {
                type: "u64",
                name: "lower",
              },
            ],
          },
        ],
      },
    ],
  },
];

export class BilliardAbi__factory {
  static readonly abi = _abi;
  static createInterface(): BilliardAbiInterface {
    return new Interface(_abi) as unknown as BilliardAbiInterface;
  }
  static connect(
    id: string | AbstractAddress,
    walletOrProvider: BaseWalletLocked | Provider | null | undefined
  ): BilliardAbi {
    return new Contract(id, _abi, walletOrProvider) as unknown as BilliardAbi;
  }
}
